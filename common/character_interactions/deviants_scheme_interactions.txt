start_murder_interaction = {
	icon = icon_hostile
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_hostile

	ignores_pending_interaction_block = yes

	scheme = murder

	send_name = START_SCHEME

	is_shown = {
		NOT = { 
			scope:recipient = scope:actor 
			scope:recipient = {
				OR = {
					has_trait = deviants_succubus	
					has_trait = deviants_lesser_succubus
					has_trait = deviants_virgin
				}
			}
		}

		NAND = { # Game Rules!
			has_game_rule = no_players_multiplayer_murder_schemes
			scope:actor = {
				is_ai = no
			}
			scope:recipient = {
				is_ai = no
			}
		}

		NAND = {
			has_game_rule = no_player_families_multiplayer_murder_schemes
			scope:actor = {
				is_ai = no
			}
			scope:recipient = {
				OR = {
					is_ai = no
					any_close_family_member = {
						AND = {
							is_ai = no
							NOT = { this = scope:actor }
						}
					}
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			can_start_scheme = {
				type = murder
				target = scope:recipient
			}
		}
		scope:recipient = { NOT = { has_strong_hook = scope:actor } }
	}

	desc = {
		triggered_desc = {
			trigger = {
				scope:actor = {
					can_start_scheme = {
						type = murder
						target = scope:recipient
					}
				}
			}
			desc = scheme_interaction_tt_murder_approved
		}
	}

	on_accept = {
		scope:actor = {
			stress_impact = {
				compassionate = major_stress_impact_gain
				honest = medium_stress_impact_gain
				just = medium_stress_impact_gain
			}
		}
		hidden_effect = {
			scope:actor = {
				send_interface_toast = {
					title = start_murder_interaction_notification

					left_icon = scope:actor					
					right_icon = scope:recipient

					start_scheme = {
						type = murder
						target = scope:recipient
					}

					show_as_tooltip = {
						stress_impact = {
							compassionate = major_stress_impact_gain
							honest = medium_stress_impact_gain
							just = medium_stress_impact_gain
						}
					}
				}
				if = {
					limit = {
						has_trait = education_intrigue_5
					}
					random_scheme = {
						limit = {
							scheme_type = murder
							scheme_target = scope:recipient
						}
						add_scheme_progress = 3
					}
				}
				# Plus any on_start modifiers we may need.
				if = {
					limit = { var:feast_events_ewan_0001_bonus_value ?= scope:recipient }
					# Hand over the modifier.
					random_scheme = {
						limit = {
							scheme_type = murder
							scheme_target = scope:recipient
						}
						add_scheme_modifier = { type = feast_learnt_habits_modifier }
					}
					# Remove the variable now that we're done with it.
					remove_variable = feast_events_ewan_0001_bonus_value
				}
			}
		}
	}
	
	auto_accept = yes
}
